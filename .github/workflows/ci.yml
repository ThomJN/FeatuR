name: CI

on:
  push:
    branches:
      - master
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Sonarscanner for dotnet
        uses: raulcanales/dotnet-sonarscanner@v2.2
        with:
          buildCommand: dotnet build ./FeatuR.sln -c Release
          testCommand: dotnet test ./FeatuR.sln --no-build -c Release -p:CollectCoverage=true -p:CoverletOutputFormat=opencover
          projectKey: raulcanales_FeatuR
          projectName: FeatuR
          sonarOrganisation: raulcanales
          beginArguments: >
              /d:sonar.verbose="false"
              /d:sonar.exclusions="**/bin/**/*,**/obj/**/*"
              /d:sonar.cs.opencover.reportsPaths="test/**/coverage.opencover.xml"
              /d:sonar.coverage.exclusions='"**/*.cs","**/*.md"'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Build with dotnet
        run: dotnet build --configuration Release
      - name: Test with dotnet
        run: dotnet test
  deploy:
    name: Deploy to MyGet
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Pack NuGet package
        run: dotnet pack --configuration Release --version-suffix "ci"
      - name: Push package to MyGet
        run: dotnet nuget push **/*.nupkg
              --api-key ${{ secrets.MYGET_DEPLOY_KEY }}
              --source https://www.myget.org/F/featur/api/v3/index.json
              --no-symbols
              --skip-duplicate
